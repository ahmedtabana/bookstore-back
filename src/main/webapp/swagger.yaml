---
swagger: "2.0"
info:
  description: "BookStore APIs exposed from a Java EE back-end to an Angular front-end"
  version: "1.0.0"
  title: "BookStore APIs"
  contact:
    name: "Ahmed Ibraheem"
    email: "ahmedibraheem10@gmail.com"
host: "localhost:8080"
basePath: "/bookstore-back-1.0/api"
tags:
- name: "Book"
  description: "Tag used to denote operations as private"
schemes:
- "http"
- "https"
paths:
  /books:
    get:
      tags:
      - "Book"
      summary: "Returns all the books"
      description: ""
      operationId: "getBooks"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "Books found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Book"
        204:
          description: "No books found"
    post:
      tags:
      - "Book"
      summary: "Creates a book given a JSon Book representation"
      description: ""
      operationId: "createBook"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Book to be created"
        required: true
        schema:
          $ref: "#/definitions/Book"
      responses:
        201:
          description: "The book is created"
        415:
          description: "Format is not JSon"
  /books/count:
    get:
      tags:
      - "Book"
      summary: "Returns the number of books"
      description: ""
      operationId: "countBooks"
      produces:
      - "text/plain"
      parameters: []
      responses:
        200:
          description: "Number of books found"
          schema:
            type: "integer"
            format: "int64"
        204:
          description: "No books found"
  /books/{id}:
    get:
      tags:
      - "Book"
      summary: "Returns a book given an identifier"
      description: ""
      operationId: "getBook"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        minimum: 1
        pattern: "\\d+"
        format: "int64"
      responses:
        200:
          description: "Book found"
          schema:
            $ref: "#/definitions/Book"
        404:
          description: "Book not found"
    delete:
      tags:
      - "Book"
      summary: "Deletes a book given an id"
      description: ""
      operationId: "deleteBook"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "integer"
        minimum: 1
        pattern: "\\d+"
        format: "int64"
      responses:
        204:
          description: "Book has been deleted"
        400:
          description: "Invalid input. Id cannot be lower than 1"
        500:
          description: "Book not found"
definitions:
  Book:
    type: "object"
    required:
    - "isbn"
    - "title"
    properties:
      id:
        type: "integer"
        format: "int64"
        description: "Identifier"
      isbn:
        type: "string"
        minLength: 1
        maxLength: 50
      title:
        type: "string"
        description: "Title of the book"
        minLength: 1
        maxLength: 200
      imageUrl:
        type: "string"
      language:
        type: "string"
      unitCost:
        type: "number"
        format: "float"
        minimum: 1
      nbOfPages:
        type: "integer"
        format: "int32"
      publicationDate:
        type: "string"
        format: "date-time"
      description:
        type: "string"
        description: "Description of the book"
        minLength: 1
        maxLength: 10000
    description: "Book resource representation"
